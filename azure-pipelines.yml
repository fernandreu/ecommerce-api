# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Windows-2019'
  # vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'

steps:

# Some .NET Core SDK come pre-installed with the agents, and hence this is usually not needed
# - task: DotNetCoreInstaller@0
#   displayName: Install ASP.NET Core SDK
#   inputs:
#     packageType: 'sdk'
#     version: '2.2.202'
    
- script: dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
  displayName: 'Publish API ($(buildConfiguration))'

- task: DotNetCoreCLI@2
  displayName: Run Unit Tests
  inputs:
    command: test
    projects: '**/*UnitTests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Run Integration Tests
  inputs:
    command: test
    projects: '**/*IntegrationTests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
    
- task: DotNetCoreCLI@2
  displayName: Run Functional Tests
  inputs:
    command: test
    projects: '**/*FunctionalTests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# - task: PublishBuildArtifacts@1
#   displayName: Publish Artifacts
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: 'artifact' 
#     publishLocation: 'Container'

- task: LambdaNETCoreDeploy@1
  displayName: 'Deploy Lambda'
  inputs:
    awsCredentials: AWS
    regionName: 'eu-west-1'
    command: deployServerless
    lambdaProjectPath: '$(Build.SourcesDirectory)/src/Web/Web.csproj'
    stackName: ECommerceAPIStack
    s3Bucket: 'ecommerce-api-eu-ireland'
